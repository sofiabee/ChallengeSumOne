PARTE EM PYTHON

	versão: 3.7.1
	IDE utilizada: PyCharm
	módulos importados: string, operator
	Basta rodar o arquivo .py localizado na mesma pasta que fica o arquivo .txt

	No arquivo cliente.txt ficam as informações sobre a lista de livros desejados bem como a regra de ordenação. O padrão para adicionar livro é 'Livro x-Título, Autor, Edição', sendo x o id do livro. 
	O padrão para escolher ordenação é sempre Atributo direção, como 'Título ascendente'. Caso não queira ordenar, basta não adicionar nenhum atributo. É importante que no arquivo cliente.txt todas as direções estejam em letra minúscula e espaçadas normalmente em vírgulas. 
	É nessa parte que tá o código de fato, que faz rodar o serviço de ordenação. A parte em RoR é mais um registro de aprendizado!

PARTE EM ROR

	versão rails: 5.1.6.1
	       bundle: 2.0.1
	       ruby: 2.3.3p22
	       sqlite3: 3.8.7.2
	IDE utilizada: Notepad++
	Basta rodar o server na pasta challenge e lá terá, como explicei em outro documento, basicamente apenas o layout, funcionando apenas submissão de novos livros e edição. A ideia dessa etapa do problema é mostrar como seria a visualização do cliente para input e outuput, porém a funcionalidade está em python, faltando a integração (também expliquei porque fiz isso no outro documento) 

	Eu postei todas pastas visíveis do meu arquivo, porém as principais são as que ficam em challenge/app, config e db. Algumas não foram submetidas porque o GitHub identifica como escondidas. 
